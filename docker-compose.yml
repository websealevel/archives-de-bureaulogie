version: "3.4"

services:

  #L'application web cliente
  back:
    build:
      context: ./
      dockerfile: Dockerfile-apache-php
    depends_on:
      - db
    restart: always
    networks:
      - archives-de-bureaulogie
      - web
    volumes:
      - "./DocumentRoot/:/var/www/html/:rw"
      - "./DocumentRoot/.htaccess:/var/www/html/.htaccess"
      - "./DocumentRoot/php.ini:/usr/local/etc/php/conf.d/aooc_php.ini"
      - "./DocumentRoot/.env:/var/www/html/src/.env"
    container_name: ${PROJECT_NAME}-back
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.back-${PROJECT_NAME}.rule=Host(`back.${PROJECT_NAME}.${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.back-${PROJECT_NAME}.entrypoints=web"
    #Nous donne les droits en ecriture au volume (par défaut donné à root, pas cool)
    user: "${UID}:${GID}"

  #Le serveur de la base de données postgres
  db:
    build:
      context: ./
      dockerfile: Dockerfile-postgres
    environment:
      POSTGRES_USER: 'user'
      POSTGRES_PASSWORD: 'password'
      POSTGRES_DB: 'mydb'
    restart: always
    container_name: ${PROJECT_NAME}-db
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./docker_postgres_init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql
    networks:
      - archives-de-bureaulogie
    labels:
      - "traefik.enable=false"

  #Le serveur de adminer
  adminer:
    image: adminer
    restart: always
    depends_on:
      - db
    container_name: ${PROJECT_NAME}-adminer
    networks:
      - web
      - archives-de-bureaulogie
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.adminer-${PROJECT_NAME}.rule=Host(`adminer.${PROJECT_NAME}.${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.adminer-${PROJECT_NAME}.entrypoints=web"
      
networks:
  archives-de-bureaulogie:
  web:
    external: true
